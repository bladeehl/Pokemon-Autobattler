package com.github.bladeehl.io;

import com.github.bladeehl.model.Pokemon;
import com.github.bladeehl.model.Trainer;
import lombok.NonNull;
import lombok.val;
import org.springframework.stereotype.Component;

import java.util.List;

@Component
public class WebIO {
    public String getTrainerMenu() {
        return """
            --- –¢—Ä–µ–Ω–µ—Ä—Å–∫–æ–µ –º–µ–Ω—é ---
            1. –°–æ–∑–¥–∞—Ç—å —Ç—Ä–µ–Ω–µ—Ä–∞
            2. –í—ã–±—Ä–∞—Ç—å —Ç—Ä–µ–Ω–µ—Ä–∞
            0. –í—ã—Ö–æ–¥

            –í–∞—à –≤—ã–±–æ—Ä: """;
    }

    public String getCreateTrainerPrompt() {
        return "–í–≤–µ–¥–∏—Ç–µ –∏–º—è: ";
    }

    public String getSelectTrainerPrompt(@NonNull final List<Trainer> trainers) {
        val output = new StringBuilder();

        appendTrainers(output, trainers);
        output.append("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä: ");
        return output.toString();
    }

    public String getNoTrainersMessage() {
        return "–¢—Ä–µ–Ω–µ—Ä–æ–≤ –Ω–µ—Ç.";
    }

    public String getTrainerActions(@NonNull final Trainer trainer) {
        return """
            --- –ú–µ–Ω—é %s ---
            1. –ù–∞—á–∞—Ç—å –±–æ–π
            2. –°–æ–∑–¥–∞—Ç—å –ø–æ–∫–µ–º–æ–Ω–∞
            3. –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–∫–µ–º–æ–Ω–∞
            4. –£–¥–∞–ª–∏—Ç—å –ø–æ–∫–µ–º–æ–Ω–∞
            5. –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–∫–µ–º–æ–Ω–æ–≤
            0. –ù–∞–∑–∞–¥

            –í—ã–±–æ—Ä: """
            .formatted(trainer.getName());
    }


    public String getCreatePokemonTypePrompt() {
        return "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–∫–µ–º–æ–Ω–∞ (1 - –û–≥–Ω–µ–Ω–Ω—ã–π, 2 - –í–æ–¥—è–Ω–æ–π): ";
    }

    public String getCreatePokemonNamePrompt() {
        return "–ò–º—è: ";
    }

    public String getCreatePokemonHPPrompt() {
        return "–ó–¥–æ—Ä–æ–≤—å–µ: ";
    }

    public String getCreatePokemonDamagePrompt() {
        return "–£—Ä–æ–Ω: ";
    }

    public String getCreateFirePokemonResPrompt() {
        return "–û–≥–Ω–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞: ";
    }

    public String getCreateFirePokemonPwrPrompt() {
        return "–û–≥–Ω–µ–Ω–Ω–∞—è —Å–∏–ª–∞: ";
    }

    public String getCreateWaterPokemonResPrompt() {
        return "–í–æ–¥–Ω–∞—è –∑–∞—â–∏—Ç–∞: ";
    }

    public String getCreateWaterPokemonPwrPrompt() {
        return "–í–æ–¥–Ω–∞—è —Å–∏–ª–∞: ";
    }

    public String getSelectPokemonForBattlePrompt(@NonNull final List<Pokemon> pokemons) {
        val output = new StringBuilder();

        output.append("–í—ã–±–µ—Ä–∏—Ç–µ –¥–≤—É—Ö –ø–æ–∫–µ–º–æ–Ω–æ–≤ –¥–ª—è –±–∏—Ç–≤—ã:\n");
        appendPokemons(output, pokemons);
        output.append("–ü–µ—Ä–≤—ã–π –ø–æ–∫–µ–º–æ–Ω: ");
        return output.toString();
    }

    public String getSelectSecondPokemonPrompt(@NonNull final List<Pokemon> pokemons) {
        val output = new StringBuilder();

        appendPokemons(output, pokemons);
        output.append("–í—Ç–æ—Ä–æ–π –ø–æ–∫–µ–º–æ–Ω: ");
        return output.toString();
    }

    public String getBattleStart(
        @NonNull final Pokemon firstPokemon,
        @NonNull final Pokemon secondPokemon) {

        return """
            ‚öîÔ∏è –ë–∏—Ç–≤–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è!
            %s VS %s
            ‚öîÔ∏è‚öîÔ∏è‚öîÔ∏è‚öîÔ∏è‚öîÔ∏è‚öîÔ∏è‚öîÔ∏è‚öîÔ∏è‚öîÔ∏è‚öîÔ∏è‚öîÔ∏è
            
            """
            .formatted(firstPokemon.getName(),
                secondPokemon.getName());
    }

    public String getBattleTurn(@NonNull final Pokemon currentPokemon) {
        return """
            üéÆ –•–æ–¥: %s
            1. –ê—Ç–∞–∫–æ–≤–∞—Ç—å
            2. –ó–∞—â–∏—Ç–∏—Ç—å—Å—è
            3. –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å
            4. –°–ø–µ—Ü. –∞—Ç–∞–∫–∞
            5. –ó–∞—â–∏—Ç–Ω–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å
            6. –≠–≤–æ–ª—é—Ü–∏—è
            –í—ã–±–æ—Ä: """
            .formatted(currentPokemon.getName());
    }

    public String getBattleAttack(
        @NonNull final Pokemon attacker,
        @NonNull final Pokemon target,
        int damage) {

        return "üí• %s –∞—Ç–∞–∫–æ–≤–∞–ª %s –Ω–∞ %d —É—Ä–æ–Ω–∞%n"
            .formatted(attacker.getName(),
                target.getName(),
                damage);
    }


    public String getBattleDefend(@NonNull final Pokemon pokemon) {
        return "üõ°Ô∏è %s –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –∑–∞—â–∏—Ç—É%n".formatted(pokemon.getName());
    }

    public String getBattleAbility(
        @NonNull final Pokemon pokemon,
        int gain) {

        return "‚ú® %s –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å (+%d HP)%n".formatted(pokemon.getName(),
                gain);
    }


    public String getBattleSpecialAttack(int damage) {
        return "üî• –°–ø–µ—Ü. –∞—Ç–∞–∫–∞ –Ω–∞–Ω–µ—Å–ª–∞ %d —É—Ä–æ–Ω–∞%n".formatted(damage);
    }

    public String getBattleDefensiveAbility() {
        return "üõ°Ô∏è –ó–∞—â–∏—Ç–Ω–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.";
    }

    public String getBattleEvolve() {
        return "üÜô –≠–≤–æ–ª—é—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!";
    }

    public String getBattleStatus(
        @NonNull final Pokemon firstPokemon,
        @NonNull final Pokemon secondPokemon) {

        return "üìä %s (HP: %d) vs %s (HP: %d)%n%n".formatted(
            firstPokemon.getName(),
            firstPokemon.getHealth(),
            secondPokemon.getName(),
            secondPokemon.getHealth());
    }

    public String getBattleWinner(@NonNull final Pokemon winner) {
        return "–ü–æ–±–µ–¥–∏—Ç–µ–ª—å: %s!%n".formatted(winner.getName());
    }

    public String getNoPokemonForBattleMessage() {
        return "–ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 2 –ø–æ–∫–µ–º–æ–Ω–∞ –¥–ª—è –±–æ—è.";
    }

    public String getSelectPokemonToUpdatePrompt(@NonNull final List<Pokemon> pokemons) {
        val output = new StringBuilder();

        appendPokemons(output, pokemons);
        output.append("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∫–µ–º–æ–Ω–∞: ");
        return output.toString();
    }

    public String getUpdatePokemonFieldPrompt() {
        return """
            1. –ò–º—è
            2. HP
            3. –£—Ä–æ–Ω

            –ß—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å: """;
    }

    public String getUpdatePokemonNamePrompt() {
        return "–ù–æ–≤–æ–µ –∏–º—è: ";
    }

    public String getUpdatePokemonHPPrompt() {
        return "–ù–æ–≤–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ: ";
    }

    public String getUpdatePokemonDamagePrompt() {
        return "–ù–æ–≤—ã–π —É—Ä–æ–Ω: ";
    }

    public String getDeletePokemonPrompt(@NonNull final List<Pokemon> pokemons) {
        val output = new StringBuilder();

        appendPokemons(output, pokemons);
        output.append("–£–¥–∞–ª–∏—Ç—å –ø–æ–∫–µ–º–æ–Ω–∞ –Ω–æ–º–µ—Ä: ");
        return output.toString();
    }

    public String getShowPokemons(@NonNull final List<Pokemon> pokemons) {
        val output = new StringBuilder();

        appendPokemons(output, pokemons);
        return output.toString();
    }

    public String getInvalidChoiceMessage() {
        return "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.";
    }

    public String getInvalidPokemonSelectionMessage() {
        return "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä –ø–æ–∫–µ–º–æ–Ω–æ–≤. –ë–æ–π –æ—Ç–º–µ–Ω—ë–Ω.";
    }

    public String getPokemonCreatedMessage() {
        return "–ü–æ–∫–µ–º–æ–Ω —Å–æ–∑–¥–∞–Ω.\n";
    }

    public String getPokemonUpdatedMessage() {
        return "–ü–æ–∫–µ–º–æ–Ω –æ–±–Ω–æ–≤–ª—ë–Ω.\n";
    }

    public String getPokemonDeletedMessage() {
        return "–ü–æ–∫–µ–º–æ–Ω —É–¥–∞–ª—ë–Ω.\n";
    }

    public String getInvalidInputMessage() {
        return "–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.\n";
    }

    public String getErrorMessage(@NonNull final String message) {
        return "–û—à–∏–±–∫–∞: " + message + "\n";
    }

    public int parseInt(
        @NonNull final String input,
        @NonNull final StringBuilder output) {
        try {
            return Integer.parseInt(input.trim());
        } catch (NumberFormatException thrown) {
            output.append(getInvalidInputMessage());
            return -1;
        }
    }

    private void appendPokemons(
        @NonNull final StringBuilder output,
        @NonNull final List<Pokemon> pokemons) {

        if (pokemons.isEmpty()) {
            output.append("–ù–µ—Ç –ø–æ–∫–µ–º–æ–Ω–æ–≤.\n");
        } else {
            pokemons.stream()
                .map(pokemon -> "%d - %s%n".formatted(pokemons.indexOf(pokemon) + 1,
                    pokemon.toString()))
                .forEach(output::append);
        }
    }

    private void appendTrainers(
        @NonNull final StringBuilder output,
        @NonNull final List<Trainer> trainers) {

        trainers.stream()
            .map(trainer -> "%d - %s%n".formatted(trainers.indexOf(trainer) + 1,
                trainer.getName()))
            .forEach(output::append);
    }
}
